// Generated by gencpp from file my_sensor/FakeSensor.msg
// DO NOT EDIT!


#ifndef MY_SENSOR_MESSAGE_FAKESENSOR_H
#define MY_SENSOR_MESSAGE_FAKESENSOR_H

#include <ros/service_traits.h>


#include <my_sensor/FakeSensorRequest.h>
#include <my_sensor/FakeSensorResponse.h>


namespace my_sensor
{

struct FakeSensor
{

typedef FakeSensorRequest Request;
typedef FakeSensorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FakeSensor
} // namespace my_sensor


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::my_sensor::FakeSensor > {
  static const char* value()
  {
    return "c3d2506862045c1ddfbe5c9ef23688f4";
  }

  static const char* value(const ::my_sensor::FakeSensor&) { return value(); }
};

template<>
struct DataType< ::my_sensor::FakeSensor > {
  static const char* value()
  {
    return "my_sensor/FakeSensor";
  }

  static const char* value(const ::my_sensor::FakeSensor&) { return value(); }
};


// service_traits::MD5Sum< ::my_sensor::FakeSensorRequest> should match 
// service_traits::MD5Sum< ::my_sensor::FakeSensor > 
template<>
struct MD5Sum< ::my_sensor::FakeSensorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::my_sensor::FakeSensor >::value();
  }
  static const char* value(const ::my_sensor::FakeSensorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_sensor::FakeSensorRequest> should match 
// service_traits::DataType< ::my_sensor::FakeSensor > 
template<>
struct DataType< ::my_sensor::FakeSensorRequest>
{
  static const char* value()
  {
    return DataType< ::my_sensor::FakeSensor >::value();
  }
  static const char* value(const ::my_sensor::FakeSensorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::my_sensor::FakeSensorResponse> should match 
// service_traits::MD5Sum< ::my_sensor::FakeSensor > 
template<>
struct MD5Sum< ::my_sensor::FakeSensorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::my_sensor::FakeSensor >::value();
  }
  static const char* value(const ::my_sensor::FakeSensorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::my_sensor::FakeSensorResponse> should match 
// service_traits::DataType< ::my_sensor::FakeSensor > 
template<>
struct DataType< ::my_sensor::FakeSensorResponse>
{
  static const char* value()
  {
    return DataType< ::my_sensor::FakeSensor >::value();
  }
  static const char* value(const ::my_sensor::FakeSensorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MY_SENSOR_MESSAGE_FAKESENSOR_H
