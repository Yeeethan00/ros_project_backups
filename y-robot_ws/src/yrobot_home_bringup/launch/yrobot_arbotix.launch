<launch>
   <!-- Make sure we are not using simulated time -->
   <param name="/use_sim_time" value="false" />
  
   <!-- Launch the arbotix driver in fake mode by default -->
   <arg name="sim" default="true" />
   
   <!-- If using a real controller, look on /dev/ttyUSB0 by default -->
   <!--arg name="port" default="/dev/ttyUSB0" /-->
   
   <!-- Load the URDF/Xacro model of our robot -->
   <param name="robot_description" command="$(find xacro)/xacro.py '$(find yrobot_home_bringup)/urdf/yrobot_arm_base.urdf.xacro'" />
   
   <!-- Bring up the arbotix driver with a configuration file appropriate to the robot -->
   <node name="arbotix" pkg="arbotix_python" type="arbotix_driver" clear_params="true" output="screen">
      <rosparam file="$(find yrobot_home_bringup)/config/arbotix/yrobot_arbotix.yaml" command="load" />
      <param name="sim" value="$(arg sim)" />
      <!--param name="port" value="$(arg port)" /-->
   </node>
  

   <!-- Publish the robot state -->
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
       <param name="publish_frequency" type="double" value="20.0" />
   </node>

   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <!--param name="use_gui" value="$(arg use_gui)"/-->
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
  </node>

   <!--node pkg="yrobot_home_bringup" type="jointcontroller" name="jointcontroller"/-->
   <node pkg="rqt_robot_monitor" type="rqt_robot_monitor" name="rqt_robot_monitor" unless="$(arg sim)" />
  
</launch>
